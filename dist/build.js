(()=>{"use strict";new Vue({el:"#app",components:{filter_el:{data:()=>({userSearch:""}),template:'\n              <form action="#" class="search-form" @submit.prevent=\'$parent.$refs.products.filter(userSearch)\'>\n                <input type="text" class="search-field" v-model="userSearch" />\n                <button type="submit" class="btn-search">\n                   <i class="fas fa-search"></i>\n                </button>\n              </form>\n            '},products:{components:{product:{props:["img","prod"],template:' <div class="goods-item">\n                <div class="desc">\n                  <img src="img" alt="Some img" /> \n                  <h3>{{prod.product_name}}</h3>\n                  <p>{{prod.price}}</p>\n                  <button class="buy-btn" @click="$root.$refs.cart.addItem(prod)">Купить</button>\n                </div>\n              </div>\n\n',mounted(){console.log(2)}}},data:()=>({imgProduct:"https://placehold.it/200x150",catalogUrl:"/catalogData.json",filtered:[],goods:[]}),mounted(){this.$root.makeGETRequest("/catalogData").then((t=>{t=JSON.parse(t);for(let e of t)this.goods.push(e),this.filtered.push(e)}))},methods:{filter(t){const e=new RegExp(t,"i");this.filtered=this.goods.filter((t=>e.test(t.product_name)))}},template:'\n  <div class="goods">\n    <product\n      v-for="product of filtered" \n      v-bind:key="product.id_product"\n      v-bind:prod="product">\n      v-bind:img="imgProduct"\n    </product>\n  </div>\n'},cart:{components:{"cart-item":{props:["cart_item","img"],template:'\n    <div class="cart-item">\n      <div class="goods-bio">\n        <img :src="img" alt="Some image">\n        <div class="goods-desc">\n          <p class="goods-title">{{ cart_item.product_name }}</p>\n          <p class="goods-quantity">Quantity: {{ cart_item.quantity }}</p>\n          <p class="goods-single-price">$ {{ cart_item.price }} each</p>\n        </div>\n      </div>\n      <div class="right-block">\n          <p class="goods-price">{{ cart_item.quantity * cart_item.price }}</p>\n          <button class="del-btn" @click="$root.$refs.cart.removeItem(cart_item)">&times;</button>\n      </div>\n    </div>'}},data:()=>({cartItems:[],cartUrl:"/getBasket.json",imgCart:"https://placehold.it/50x100",showCart:!1}),mounted(){this.$root.makeGETRequest("/getCart").then((t=>{t=JSON.parse(t);for(let e of t){let t=+e.id_product,s=this.cartItems.find((e=>e.id_product===t));if(s)s.quantity++;else{let s={id_product:t,price:+e.price,product_name:e.product_name,quantity:1};this.cartItems.push(s)}}}))},methods:{addItem(t){this.$root.makePOSTRequest("/addToCart",JSON.stringify(t)).then((e=>{if(1===JSON.parse(e).result){let e=+t.id_product,s=this.cartItems.find((t=>t.id_product===e));if(s)s.quantity++;else{let s={id_product:e,price:+t.price,product_name:t.product_name,quantity:1};this.cartItems.push(s)}}else alert("Error")}))},removeItem(t){this.$root.makePOSTRequest("/delFromCart",`{"id_product" : ${t.id_product} }`).then((e=>{1===JSON.parse(e).result?t.quantity>1?t.quantity--:this.cartItems.splice(this.cartItems.indexOf(t),1):alert("Error")}))}},template:'\n  <div>\n    <button class="cart-button" type="button" @click="showCart = !showCart">Корзина</button>\n    <div class="cart-block" v-show="showCart">\n      <cart-item v-for="product of cartItems"\n      :key="product.id_product"\n      :img="imgCart"\n      :cart_item="product"></cart-item>\n    </div>\n  </div>\n'}},methods:{makeGETRequest:t=>new Promise(((e,s)=>{let o;window.XMLHttpRequest?o=new XMLHttpRequest:window.ActiveXObject&&(o=new ActiveXObject("Microsoft.XMLHTTP")),o.onreadystatechange=function(){4===o.readyState&&e(o.responseText)},o.open("GET",t,!0),o.send()})),makePOSTRequest:(t,e)=>new Promise(((s,o)=>{let r;window.XMLHttpRequest?r=new XMLHttpRequest:window.ActiveXObject&&(r=new ActiveXObject("Microsoft.XMLHTTP")),r.onreadystatechange=function(){4===r.readyState&&s(r.responseText)},r.open("POST",t,!0),r.setRequestHeader("Content-Type","application/json; charset=UTF-8"),r.send(e)}))}})})();